{"version":3,"file":"Typograph.js","sources":["../src/Keyboards.ts","../src/Sequence.ts","../src/Typograph.ts"],"sourcesContent":["function strEnum<T extends string>(o: T[]): {[K in T]: K} {\n  return o.reduce((res, key) => {\n    res[key] = key;\n    return res;\n  }, Object.create(null));\n}\n\nexport const KeyboardsNames = strEnum([\n  \"azerty\",\n  \"qwerty\",\n]);\n\nexport const keyboards: {[key in keyof typeof KeyboardsNames]: string[]} = {\n  azerty: [\"azertyuiop\", \"qsdfghjklm\", \"wxcvbn\"],\n  qwerty: [\"qwertyuiop\", \"asdfghjklz\", \"xcvbnm\"],\n};\n","interface InterfaceMistype {\n  index: number;\n  letter: string;\n  wrongChar: string;\n}\n\nexport default class Sequence {\n\n  private text: string[];\n  private mistypeElement = document.createElement(\"mistype\");\n  private finalTextNode: Text;\n  private textNode: Text;\n\n  constructor(\n    text: string,\n    private target: Element,\n    private keyboard: string[],\n    private speed: number,\n    private mistype: boolean,\n    private mistypeRate: number,\n    private selectBeforeErase: boolean,\n  ) {\n    this.text = Array.prototype.slice.call(text);\n    this.textNode = document.createTextNode(\"\");\n    this.finalTextNode = this.textNode;\n  }\n\n  public async write() {\n    const mistypes: InterfaceMistype[] = [];\n    this.target.insertBefore(this.textNode, this.target.firstChild);\n    while (this.text.length || mistypes.length) {\n      const rand = Math.random();\n      const speed = this.speed;\n      const mistyped = this.mistype && this.finalTextNode!.length && rand < this.mistypeRate;\n\n      if (this.text.length && (mistyped || !mistypes.length)) {\n        let letter = this.text.shift()!;\n        if (mistyped) {\n          const charCode = letter.charCodeAt(0);\n          if (!this.target.querySelector(\"mistype\")) {\n            this.textNode.after(this.mistypeElement);\n            this.finalTextNode = this.mistypeElement.appendChild(document.createTextNode(\"\"));\n          }\n\n          mistypes.push({\n            index: this.finalTextNode!.length,\n            letter,\n            wrongChar: letter,\n          });\n\n          if (charCode > 96 && charCode < 123) {\n            const keyboardLine = this.keyboard.filter((e: string) => e.indexOf(letter) >= 0).shift()!;\n            const letterPosition = keyboardLine.indexOf(letter.toLowerCase());\n            /* wrongChar = sibbling letter (ex: if t then r or y)\n            IF first or last letter of the line\n            THEN wrongChar = first letter +1 or last letter -1 (ex for qwerty: if q then w or if n then b) */\n            letter = keyboardLine[\n              letterPosition +\n              (!letterPosition ? 1 :\n                letterPosition + 1 === keyboardLine.length ? -1 : (Math.round(Math.random()) ? 1 : -1)\n              )\n            ];\n            mistypes[0].wrongChar = letter;\n          }\n        }\n        this.finalTextNode.nodeValue += await this.typeLetter(speed, letter);\n      } else {\n        if (this.selectBeforeErase && mistypes.length > 1) {\n          const hl = this.mistypeElement.appendChild(document.createElement(\"hl\"));\n          while (mistypes.length) { hl.textContent += await this.highLightLetter(speed, mistypes.pop()!); }\n        } else {\n        while (mistypes.length) { this.finalTextNode.nodeValue = await this.removeLetter(speed, mistypes.pop()!); }\n        }\n        this.finalTextNode = this.textNode;\n        this.mistypeElement.remove();\n      }\n    }\n    return mistypes;\n  }\n\n  private typeLetter(delay: number, letter: string): Promise<string> {\n    return new Promise((resolve: (letter: string) => void) => setTimeout(() => resolve(letter!), delay));\n  }\n\n  private removeLetter(delay: number, mistype: InterfaceMistype): Promise<string> {\n    return new Promise((resolve: (letter: string) => void) => setTimeout(() => {\n      this.text.unshift(mistype.letter);\n      resolve(this.finalTextNode.nodeValue!.slice(0, -1));\n    }, delay));\n  }\n\n  private highLightLetter(delay: number, mistype: InterfaceMistype): Promise<string> {\n    return new Promise((resolve: (letter: string) => void) => setTimeout(() => {\n      this.text.unshift(mistype.letter);\n      this.mistypeElement.firstChild!.nodeValue = this.finalTextNode.firstChild!.nodeValue!.slice(0, -1);\n      resolve(mistype.wrongChar);\n    }, delay));\n  }\n}\n","import {keyboards} from \"./Keyboards\";\nimport Sequence from \"./Sequence\";\nimport InterfaceParams from \"./TypographParamsInterface\";\n\nexport default class Typograph {\n  private sequences: Sequence[] = [];\n  private params: InterfaceParams;\n\n  constructor(p: InterfaceParams) {\n    this.params = {\n      ...p,\n      mistypeRate: p.mistypeRate || 0.3,\n      speed: p.speed || 250,\n    };\n  }\n\n  public type(callback?: () => void): void {\n    this.sequences = this.initSequences();\n    this.sequences.forEach((sequence: Sequence) => sequence.write());\n  }\n\n  private initSequences(): Sequence[] {\n    return Array.from(document.querySelectorAll(this.params.selector)).map((el: Element) => {\n      const text = el.firstChild && el.firstChild.nodeType === 3 ? el.firstChild.nodeValue : \"\";\n      if (el.firstChild && text!.length > 1) { el.firstChild.nodeValue = \"\"; }\n      const sequence = new Sequence(\n        this.params.text || el.getAttribute(\"data-typeit\") || text!,\n        el,\n        keyboards[this.params.keyboard || \"qwerty\"],\n        this.params.speed!,\n        !!this.params.mistype,\n        this.params.mistypeRate!,\n        !!this.params.selectBeforeErase,\n      );\n      return sequence;\n    });\n  }\n}\n"],"names":[],"mappings":";;;;;;EAAA,SAAS,OAAO,CAAmB,CAAM;MACvC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG;UACvB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;UACf,OAAO,GAAG,CAAC;OACZ,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;AAED,EAAO,MAAM,cAAc,GAAG,OAAO,CAAC;MACpC,QAAQ;MACR,QAAQ;GACT,CAAC,CAAC;AAEH,EAAO,MAAM,SAAS,GAAqD;MACzE,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,QAAQ,CAAC;MAC9C,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,QAAQ,CAAC;GAC/C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;QCTmB,QAAQ;MAO3B,YACE,IAAY,EACJ,MAAe,EACf,QAAkB,EAClB,KAAa,EACb,OAAgB,EAChB,WAAmB,EACnB,iBAA0B;UAL1B,WAAM,GAAN,MAAM,CAAS;UACf,aAAQ,GAAR,QAAQ,CAAU;UAClB,UAAK,GAAL,KAAK,CAAQ;UACb,YAAO,GAAP,OAAO,CAAS;UAChB,gBAAW,GAAX,WAAW,CAAQ;UACnB,sBAAiB,GAAjB,iBAAiB,CAAS;UAX5B,mBAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;UAazD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;UAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;OACpC;MAEY,KAAK;;cAChB,MAAM,QAAQ,GAAuB,EAAE,CAAC;cACxC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;cAChE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,EAAE;kBAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;kBAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;kBACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAc,CAAC,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;kBAEvF,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;sBACtD,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAG,CAAC;sBAChC,IAAI,QAAQ,EAAE;0BACZ,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;0BACtC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;8BACzC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;8BACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;2BACnF;0BAED,QAAQ,CAAC,IAAI,CAAC;8BACZ,KAAK,EAAE,IAAI,CAAC,aAAc,CAAC,MAAM;8BACjC,MAAM;8BACN,SAAS,EAAE,MAAM;2BAClB,CAAC,CAAC;0BAEH,IAAI,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,GAAG,EAAE;8BACnC,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAS,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAG,CAAC;8BAC1F,MAAM,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;;;;8BAIlE,MAAM,GAAG,YAAY,CACnB,cAAc;mCACb,CAAC,cAAc,GAAG,CAAC;sCAClB,cAAc,GAAG,CAAC,KAAK,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CACvF,CACF,CAAC;8BACF,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC;2BAChC;uBACF;sBACD,IAAI,CAAC,aAAa,CAAC,SAAS,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;mBACtE;uBAAM;sBACL,IAAI,IAAI,CAAC,iBAAiB,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;0BACjD,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;0BACzE,OAAO,QAAQ,CAAC,MAAM,EAAE;8BAAE,EAAE,CAAC,WAAW,IAAI,MAAM,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,EAAG,CAAC,CAAC;2BAAE;uBAClG;2BAAM;0BACP,OAAO,QAAQ,CAAC,MAAM,EAAE;8BAAE,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,EAAG,CAAC,CAAC;2BAAE;uBAC1G;sBACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;sBACnC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;mBAC9B;eACF;cACD,OAAO,QAAQ,CAAC;WACjB;OAAA;MAEO,UAAU,CAAC,KAAa,EAAE,MAAc;UAC9C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAiC,KAAK,UAAU,CAAC,MAAM,OAAO,CAAC,MAAO,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;OACtG;MAEO,YAAY,CAAC,KAAa,EAAE,OAAyB;UAC3D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAiC,KAAK,UAAU,CAAC;cACnE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;cAClC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,SAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;WACrD,EAAE,KAAK,CAAC,CAAC,CAAC;OACZ;MAEO,eAAe,CAAC,KAAa,EAAE,OAAyB;UAC9D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAiC,KAAK,UAAU,CAAC;cACnE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;cAClC,IAAI,CAAC,cAAc,CAAC,UAAW,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,UAAW,CAAC,SAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACnG,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;WAC5B,EAAE,KAAK,CAAC,CAAC,CAAC;OACZ;GACF;;QC9FoB,SAAS;MAI5B,YAAY,CAAkB;UAHtB,cAAS,GAAe,EAAE,CAAC;UAIjC,IAAI,CAAC,MAAM,qBACN,CAAC,IACJ,WAAW,EAAE,CAAC,CAAC,WAAW,IAAI,GAAG,EACjC,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,GAAG,GACtB,CAAC;OACH;MAEM,IAAI,CAAC,QAAqB;UAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;UACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB,KAAK,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;OAClE;MAEO,aAAa;UACnB,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAW;cACjF,MAAM,IAAI,GAAG,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC;cAC1F,IAAI,EAAE,CAAC,UAAU,IAAI,IAAK,CAAC,MAAM,GAAG,CAAC,EAAE;kBAAE,EAAE,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC;eAAE;cACxE,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,IAAK,EAC3D,EAAE,EACF,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAC3C,IAAI,CAAC,MAAM,CAAC,KAAM,EAClB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EACrB,IAAI,CAAC,MAAM,CAAC,WAAY,EACxB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAChC,CAAC;cACF,OAAO,QAAQ,CAAC;WACjB,CAAC,CAAC;OACJ;GACF;;;;;;;;;"}