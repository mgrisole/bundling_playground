{"version":3,"file":"Typograph.js","sources":["../src/Keyboards.ts","../src/Sequence.ts","../src/Typograph.ts"],"sourcesContent":["function strEnum<T extends string>(o: T[]): {[K in T]: K} {\n  return o.reduce((res, key) => {\n    res[key] = key;\n    return res;\n  }, Object.create(null));\n}\n\nexport const KeyboardsNames = strEnum([\n  \"azerty\",\n  \"qwerty\",\n]);\n\nexport const keyboards: {[key in keyof typeof KeyboardsNames]: string[]} = {\n  azerty: [\"azertyuiop\", \"qsdfghjklm\", \"wxcvbn\"],\n  qwerty: [\"qwertyuiop\", \"asdfghjklz\", \"xcvbnm\"],\n};\n","interface InterfaceMistype {\n  index: number;\n  letter: string;\n}\n\nexport default class Sequence {\n\n  private text: string[];\n  private mistypeTag = document.createElement(\"mistype\");\n\n  constructor(\n    text: string,\n    private target: Element,\n    private keyboard: string[],\n    private speed: number,\n    private mistype: boolean,\n    private mistypeRate: number,\n  ) {\n    this.text = Array.prototype.slice.call(text);\n  }\n\n  public async write() {\n    const mistypes: InterfaceMistype[] = [];\n    while (this.text.length || mistypes.length) {\n      const rand = Math.random();\n      const speed = this.speed;\n      const mistyped = this.mistype && this.target.textContent!.length && rand < this.mistypeRate;\n      let tag = this.target;\n\n      if (this.text.length && (mistyped || !mistypes.length)) {\n        let letter = this.text.shift()!;\n        if (mistyped) {\n          tag = this.mistypeTag;\n          mistypes.unshift({\n            index: this.target.textContent!.length,\n            letter,\n          });\n\n          const keyboardLine = this.keyboard.filter((e: string) => e.indexOf(letter) >= 0);\n          console.log(this.keyboard);\n          console.log(keyboardLine);\n          const letterPosition = keyboardLine.indexOf(letter.toLowerCase());\n          // wrongChar = sibbling letter (ex: if t then r or y)\n          // IF first or last letter of the line\n          // THEN wrongChar = first letter +1 or last letter -1 (ex: if q then w or if n then b)\n          letter = keyboardLine[letterPosition + (Math.round(Math.random()) ? 1 : -1)];\n        }\n        this.target.textContent += await this.typeLetter(speed, letter);\n      } else {\n        while (mistypes.length) {\n          this.text.unshift(await this.removeLetter(speed, mistypes.shift()!));\n        }\n      }\n    }\n\n    return mistypes;\n  }\n\n  private typeLetter(t: number, letter: string): Promise<string> {\n    return new Promise((resolve: (letter: string) => void) => setTimeout(() => resolve(letter!), t));\n  }\n\n  private removeLetter(t: number, mistype: InterfaceMistype): Promise<string> {\n    return new Promise((resolve: (letter: string) => void) => setTimeout(() => {\n      this.target.textContent = this.target.textContent!.slice(0, -1);\n      resolve(mistype.letter);\n    }, t));\n  }\n}\n","import {keyboards} from \"./Keyboards\";\nimport Sequence from \"./Sequence\";\nimport InterfaceParams from \"./TypographParamsInterface\";\n\nexport default class Typograph {\n  private sequences: Sequence[] = [];\n  private params: InterfaceParams;\n\n  constructor(p: InterfaceParams) {\n    this.params = {\n      ...p,\n      mistype: !!p.mistype,\n      mistypeRate: p.mistypeRate || 0.3,\n      speed: p.speed || 250,\n    };\n  }\n\n  public type(callback?: () => void): void {\n    this.sequences = this.initSequences();\n    this.sequences.forEach((sequence: Sequence) => sequence.write());\n  }\n\n  private initSequences(): Sequence[] {\n    return Array.from(document.querySelectorAll(this.params.selector)).map((el: Element) => {\n      const sequence = new Sequence(\n        this.params.text || el.getAttribute(\"data-typeit\") || el.textContent || \"\",\n        el,\n        keyboards[this.params.keyboard || \"qwerty\"],\n        this.params.speed!,\n        this.params.mistype!,\n        this.params.mistypeRate!,\n      );\n      el.textContent = \"\";\n      return sequence;\n    });\n  }\n}\n"],"names":["reduce","res","key","Object","create","keyboards","azerty","qwerty","Sequence","[object Object]","text","target","keyboard","speed","mistype","mistypeRate","this","document","createElement","Array","prototype","slice","call","mistypes","length","rand","Math","random","mistyped","textContent","tag","unshift","removeLetter","shift","letter","mistypeTag","index","keyboardLine","filter","e","indexOf","console","log","letterPosition","toLowerCase","round","typeLetter","t","Promise","resolve","setTimeout","p","params","callback","sequences","initSequences","forEach","sequence","write","from","querySelectorAll","selector","map","el","getAttribute"],"mappings":"qLAOsC,CACpC,SACA,UARSA,OAAO,CAACC,EAAKC,KACpBD,EAAIC,GAAOA,EACJD,GACNE,OAAOC,OAAO,OAQZ,MAAMC,EAA8D,CACzEC,OAAQ,CAAC,aAAc,aAAc,UACrCC,OAAQ,CAAC,aAAc,aAAc,iBCTlBC,EAKnBC,YACEC,EACQC,EACAC,EACAC,EACAC,EACAC,GAJAC,YAAAL,EACAK,cAAAJ,EACAI,WAAAH,EACAG,aAAAF,EACAE,iBAAAD,EARFC,gBAAaC,SAASC,cAAc,WAU1CF,KAAKN,KAAOS,MAAMC,UAAUC,MAAMC,KAAKZ,GAG5BD,6CACX,MAAMc,EAA+B,GACrC,KAAOP,KAAKN,KAAKc,QAAUD,EAASC,QAAQ,CAC1C,MAAMC,EAAOC,KAAKC,SACZd,EAAQG,KAAKH,MACbe,EAAWZ,KAAKF,SAAWE,KAAKL,OAAOkB,YAAaL,QAAUC,EAAOT,KAAKD,YAChF,IAAIe,EAAMd,KAAKL,OAEf,IAAIK,KAAKN,KAAKc,SAAWI,GAAaL,EAASC,OAoB7C,KAAOD,EAASC,QACdR,KAAKN,KAAKqB,cAAcf,KAAKgB,aAAanB,EAAOU,EAASU,cArBN,CACtD,IAAIC,EAASlB,KAAKN,KAAKuB,QACvB,GAAIL,EAAU,CACZE,EAAMd,KAAKmB,WACXZ,EAASQ,QAAQ,CACfK,MAAOpB,KAAKL,OAAOkB,YAAaL,OAChCU,OAAAA,IAGF,MAAMG,EAAerB,KAAKJ,SAAS0B,OAAQC,GAAcA,EAAEC,QAAQN,IAAW,GAC9EO,QAAQC,IAAI1B,KAAKJ,UACjB6B,QAAQC,IAAIL,GACZ,MAAMM,EAAiBN,EAAaG,QAAQN,EAAOU,eAInDV,EAASG,EAAaM,GAAkBjB,KAAKmB,MAAMnB,KAAKC,UAAY,GAAK,IAE3EX,KAAKL,OAAOkB,oBAAqBb,KAAK8B,WAAWjC,EAAOqB,KAQ5D,OAAOX,iQAGDd,WAAWsC,EAAWb,GAC5B,OAAO,IAAIc,QAASC,GAAsCC,WAAW,IAAMD,EAAQf,GAAUa,IAGvFtC,aAAasC,EAAWjC,GAC9B,OAAO,IAAIkC,QAASC,GAAsCC,WAAW,KACnElC,KAAKL,OAAOkB,YAAcb,KAAKL,OAAOkB,YAAaR,MAAM,GAAI,GAC7D4B,EAAQnC,EAAQoB,SACfa,kBC1DLtC,YAAY0C,GAHJnC,eAAwB,GAI9BA,KAAKoC,wBACAD,GACHrC,UAAWqC,EAAErC,QACbC,YAAaoC,EAAEpC,aAAe,GAC9BF,MAAOsC,EAAEtC,OAAS,MAIfJ,KAAK4C,GACVrC,KAAKsC,UAAYtC,KAAKuC,gBACtBvC,KAAKsC,UAAUE,QAASC,GAAuBA,EAASC,SAGlDjD,gBACN,OAAOU,MAAMwC,KAAK1C,SAAS2C,iBAAiB5C,KAAKoC,OAAOS,WAAWC,IAAKC,IACtE,MAAMN,EAAW,IAAIjD,EACnBQ,KAAKoC,OAAO1C,MAAQqD,EAAGC,aAAa,gBAAkBD,EAAGlC,aAAe,GACxEkC,EACA1D,EAAUW,KAAKoC,OAAOxC,UAAY,UAClCI,KAAKoC,OAAOvC,MACZG,KAAKoC,OAAOtC,QACZE,KAAKoC,OAAOrC,aAGd,OADAgD,EAAGlC,YAAc,GACV4B"}