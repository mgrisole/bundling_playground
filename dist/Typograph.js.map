{"version":3,"file":"Typograph.js","sources":["../src/Keyboards.ts","../src/Sequence.ts","../src/Typograph.ts"],"sourcesContent":["function strEnum<T extends string>(o: T[]): {[K in T]: K} {\r\n  return o.reduce((res, key) => {\r\n    res[key] = key;\r\n    return res;\r\n  }, Object.create(null));\r\n}\r\n\r\nexport const KeyboardsNames = strEnum([\r\n  \"azerty\",\r\n  \"qwerty\",\r\n]);\r\n\r\nexport const keyboards: {[key in keyof typeof KeyboardsNames]: string[]} = {\r\n  azerty: [\"azertyuiop\", \"qsdfghjklm\", \"wxcvbn\"],\r\n  qwerty: [\"qwertyuiop\", \"asdfghjklz\", \"xcvbnm\"],\r\n};\r\n","interface InterfaceMistype {\r\n  index: number;\r\n  letter: string;\r\n}\r\n\r\nexport default class Sequence {\r\n\r\n  private text: string[];\r\n  private mistypeElement = document.createElement(\"mistype\");\r\n  private finalTextNode: Text;\r\n  private textNode: Text;\r\n\r\n  constructor(\r\n    text: string,\r\n    private target: Element,\r\n    private keyboard: string[],\r\n    private speed: number,\r\n    private mistype: boolean,\r\n    private mistypeRate: number,\r\n  ) {\r\n    this.text = Array.prototype.slice.call(text);\r\n    this.textNode = document.createTextNode(\"\");\r\n    this.finalTextNode = this.textNode;\r\n  }\r\n\r\n  public async write() {\r\n    const mistypes: InterfaceMistype[] = [];\r\n    this.target.insertBefore(this.textNode, this.target.firstChild);\r\n    while (this.text.length || mistypes.length) {\r\n      const rand = Math.random();\r\n      const speed = this.speed;\r\n      const mistyped = this.mistype && this.finalTextNode!.length && rand < this.mistypeRate;\r\n\r\n      if (this.text.length && (mistyped || !mistypes.length)) {\r\n        let letter = this.text.shift()!;\r\n        if (mistyped) {\r\n          const charCode = letter.charCodeAt(0);\r\n          if (!this.target.querySelector(\"mistype\")) {\r\n            this.textNode.after(this.mistypeElement);\r\n            this.finalTextNode = this.mistypeElement.appendChild(document.createTextNode(\"\"));\r\n          }\r\n\r\n          mistypes.unshift({\r\n            index: this.finalTextNode!.length,\r\n            letter,\r\n          });\r\n\r\n          if (charCode > 96 && charCode < 123) {\r\n            const keyboardLine = this.keyboard.filter((e: string) => e.indexOf(letter) >= 0).shift()!;\r\n            const letterPosition = keyboardLine.indexOf(letter.toLowerCase());\r\n            /* wrongChar = sibbling letter (ex: if t then r or y)\r\n            IF first or last letter of the line\r\n            THEN wrongChar = first letter +1 or last letter -1 (ex for qwerty: if q then w or if n then b) */\r\n            letter = keyboardLine[\r\n              letterPosition +\r\n              (!letterPosition ? 1 :\r\n                letterPosition + 1 === keyboardLine.length ? -1 : (Math.round(Math.random()) ? 1 : -1)\r\n              )\r\n            ];\r\n          }\r\n        }\r\n        this.finalTextNode.nodeValue += await this.typeLetter(speed, letter);\r\n      } else {\r\n        while (mistypes.length) {\r\n          this.text.unshift(await this.removeLetter(speed, mistypes.shift()!));\r\n        }\r\n        this.finalTextNode = this.textNode;\r\n        this.mistypeElement.remove();\r\n      }\r\n    }\r\n\r\n    return mistypes;\r\n  }\r\n\r\n  private typeLetter(t: number, letter: string): Promise<string> {\r\n    return new Promise((resolve: (letter: string) => void) => setTimeout(() => resolve(letter!), t));\r\n  }\r\n\r\n  private removeLetter(t: number, mistype: InterfaceMistype): Promise<string> {\r\n    return new Promise((resolve: (letter: string) => void) => setTimeout(() => {\r\n      this.finalTextNode.nodeValue = this.finalTextNode.nodeValue!.slice(0, -1);\r\n      resolve(mistype.letter);\r\n    }, t));\r\n  }\r\n}\r\n","import {keyboards} from \"./Keyboards\";\r\nimport Sequence from \"./Sequence\";\r\nimport InterfaceParams from \"./TypographParamsInterface\";\r\n\r\nexport default class Typograph {\r\n  private sequences: Sequence[] = [];\r\n  private params: InterfaceParams;\r\n\r\n  constructor(p: InterfaceParams) {\r\n    this.params = {\r\n      ...p,\r\n      mistype: !!p.mistype,\r\n      mistypeRate: p.mistypeRate || 0.3,\r\n      speed: p.speed || 250,\r\n    };\r\n  }\r\n\r\n  public type(callback?: () => void): void {\r\n    this.sequences = this.initSequences();\r\n    this.sequences.forEach((sequence: Sequence) => sequence.write());\r\n  }\r\n\r\n  private initSequences(): Sequence[] {\r\n    return Array.from(document.querySelectorAll(this.params.selector)).map((el: Element) => {\r\n      const text = el.firstChild!.nodeValue;\r\n      const sequence = new Sequence(\r\n        this.params.text || el.getAttribute(\"data-typeit\") || text || \"\",\r\n        el,\r\n        keyboards[this.params.keyboard || \"qwerty\"],\r\n        this.params.speed!,\r\n        this.params.mistype!,\r\n        this.params.mistypeRate!,\r\n      );\r\n      return sequence;\r\n    });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}